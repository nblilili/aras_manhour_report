<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAH8AAAD/gAAAwAAAAcAQAAPAHgAHwH/gH8=
</value>
  </data>
</root>